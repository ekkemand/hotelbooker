@using Extensions
@using Microsoft.VisualStudio.Web.CodeGeneration
@model HotelBooker.ViewModels.HotelEntityVM

@{
    ViewData["Title"] = Model.Hotel.Name;
}

@if (User.IsInRole("admin"))
{
    <div class="modal fade" id="deleteModal" tabindex="-1" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-danger">Delete @Model.Hotel.Name?</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this hotel? This can not be undone.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-dismiss="modal">Cancel</button>
                    <form asp-action="Delete" asp-route-id="@Model.Hotel.Id">
                        <input type="submit" value="Delete" class="btn btn-danger"/>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

@if (Model.Hotel.ImageUrl != null)
{
    <img src="@Url.Content(Model.Hotel.ImageUrl)" class="card-img-top" alt="Hotel picture">
}

<div class="alert alert-primary mt-3">
    <h1 class="text-uppercase alert-heading">@Model.Hotel.Name</h1>
    <p class="small text-dark">
        <strong>@Model.Hotel.Address</strong>
    </p>
    <hr/>
    <h4 class="text-success">
        A
        <span>
            <strong>@Model.Hotel.Rating</strong>
        </span> star hotel
    </h4>

    @if (!Model.Hotel.Website.Equals(""))
    {
        <a href="@Model.Hotel.Website" class="text-primary">Visit the hotel's official website</a>
    }

    <div>
        <dl class="row mt-3">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Hotel.Established)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Hotel.Established)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Hotel.OwnerCompany)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Hotel.OwnerCompany!.Name)
            </dd>
        </dl>
    </div>
</div>
@if (Model.GroupedConveniences != null)
{
    <div class="container">
        <h3 class="row">Hotel's conveniences</h3>
        <div class="row">
            @foreach (var group in Model.GroupedConveniences)
            {
                <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12">
                    <h5 class="text-primary">
                        <strong>@group.ConvenienceGroup.Name</strong>
                    </h5>
                    <ul>
                        @foreach (var item in group.Conveniences!)
                        {
                            <li class="text-primary">@item.Name</li>
                        }
                    </ul>
                </div>
            }
        </div>
    </div>
}


<div>
    <a asp-action="Index" class="btn btn-primary">Back to List</a>
    <a asp-controller="RoomTypes" asp-action="Index" asp-route-hotelId="@Model.Hotel.Id" class="btn btn-info">View rooms</a>
    <a asp-controller="Reviews" asp-action="Create" asp-route-hotelId="@Model.Hotel.Id" class="btn btn-info">
        Add a review
    </a>

    @if (User.IsInRole("admin"))
    {
        <div class="btn-group">
            <a asp-action="Edit" class="btn btn-outline-info" asp-route-id="@Model.Hotel.Id">Edit</a>
            <button class="btn btn-outline-danger" type="button" data-toggle="modal" data-target="#deleteModal">
                Delete
            </button>
            <a asp-action="Create" asp-controller="HotelConveniences" class="btn btn-outline-info"
               asp-route-hotelId="@Model.Hotel.Id">
                Add a convenience
            </a>
            <a asp-action="Create" asp-controller="Rooms" class="btn btn-outline-primary"
               asp-route-hotelId="@Model.Hotel.Id">
                Add a room
            </a>
            <a asp-action="Create" asp-controller="RoomTypes" class="btn btn-outline-primary"
               asp-route-hotelId="@Model.Hotel.Id">
                Add a room type
            </a>
        </div>
    }
</div>

@if (Model.Reviews != null && Model.Reviews.Count() != 0)
{
    <div class="container mt-3">
        <h3>User reviews to the hotel</h3>
        <div class="list-group list-group-flush">
            @foreach (var review in Model.Reviews!)
            {
                <div class="list-group-item">
                    @if (review.ReviewCategory != null)
                    {
                        @if (review.ReviewCategory!.Accepted)
                        {
                            <p class="text-primary">From category "@review.ReviewCategory!.Name"</p>
                        }
                    }
                    <h5>@review.Heading</h5>
                    <p class="small">By @review.User!.DisplayName</p>
                    <p>@review.Content</p>

                    @if (User.Identity.IsAuthenticated)
                    {
                        @if (User.IsInRole("admin") || User.UserId() == review.UserId)
                        {
                            <a asp-controller="Reviews" asp-action="Edit" asp-route-Id="@review.Id" class="btn btn-info">
                                Edit
                            </a>
                            <a asp-controller="Reviews" asp-action="Delete" asp-route-Id="@review.Id" class="btn btn-danger">
                                Delete
                            </a>
                        }
                    }
                </div>
            }
        </div>
    </div>
}